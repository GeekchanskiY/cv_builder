{
  "companies": [
    {
      "name": "Innowise Group",
      "description": "Software development outstaff/outsource company.",
      "homepage": "https://innowise.com/",
      "is_trusted": true
    },
    {
      "name": "Betera",
      "description": "Gambling company. Belarusian version of Parimatch",
      "homepage": "https://pm.by/",
      "is_trusted": false
    },
    {
      "name": "EPAM",
      "description": "American IT company, founded in Belarus in 1993. Currently practices outsource and outstaff development",
      "homepage": "https://www.epam.com/",
      "is_trusted": true
    },
    {
      "name": "Itransition",
      "description": "Itransition is a top-rated software engineering company with a pool of 3000 seasoned developers. Get the solution that meets your expectations.",
      "homepage": "https://www.itransition.com/",
      "is_trusted": false
    },
    {
      "name": "Wargaming/Lesta",
      "description": "Game development studio",
      "homepage": "https://eu.wargaming.net/",
      "is_trusted": false
    },
    {
      "name": "LeverX Group",
      "description": "SAP Center of expertise certified partner",
      "homepage": "https://leverx.com/",
      "is_trusted": false
    },
    {
      "name": "Andersen",
      "description": "Large international outstaff development company",
      "homepage": "https://andersenlab.com/",
      "is_trusted": false
    }
  ],
  "domains": [
    {
      "name": "IoT",
      "description": "Internet of things"
    },
    {
      "name": "healthcare",
      "description": "development of healthcare and just medicine equipment"
    },
    {
      "name": "gambling",
      "description": "development of gambling entertainment stuff"
    },
    {
      "name": "CRM",
      "description": "development of crm systems"
    },
    {
      "name": "CMS",
      "description": "development of cms systems"
    },
    {
      "name": "logistics",
      "description": "development of systems to improve logistics of supplies performance"
    },
    {
      "name": "VFX",
      "description": "VFX development"
    },
    {
      "name": "gameDev",
      "description": "game development"
    },
    {
      "name": "e-commerce",
      "description": "activity of electronically buying or selling products on online services"
    },
    {
      "name": "big data",
      "description": "so big... very data..."
    },
    {
      "name": "bank",
      "description": "bank system development"
    },
    {
      "name": "blockchain",
      "description": "scam, MMM, etc."
    },
    {
      "name": "finance",
      "description": "game development"
    },
    {
      "name": "AI",
      "description": "artificial intelligence research and development"
    },
    {
      "name": "ADS",
      "description": "advertisement engines development"
    },
    {
      "name": "Insurance",
      "description": "protection from financial loss in which, in exchange for a fee, a party agrees to compensate another party in the event of a certain loss, damage, or injury. It is a form of risk management, primarily used to protect against the risk of a contingent or uncertain loss."
    },
    {
      "name": "e-commerce",
      "description": "activity of electronically buying or selling products on online services"
    },
    {
      "name": "data science",
      "description": "interdisciplinary academic field that uses statistics, scientific computing, scientific methods, processes, scientific visualization, algorithms and systems to extract or extrapolate knowledge and insights from potentially noisy, structured, or unstructured data."
    },
    {
      "name": "telecom",
      "description": "telecom systems development (actually, it's a CRM subdomain"
    },
    {
      "name": "travel",
      "description": "travel platform development"
    },
    {
      "name": "education",
      "description": "educational system development"
    },
    {
      "name": "military",
      "description": "military systems development"
    }
  ],
  "employees": [
    {
      "name": "Nikita Shabanov",
      "about_me": "Japanese meme here",
      "image_url": "",
      "real_experience": 1
    },
    {
      "name": "Dmitry Astrouski",
      "about_me": "stuff",
      "image_url": "",
      "real_experience": 5
    },
    {
      "name": "Grigory Nesterov",
      "about_me": "cool PR manager",
      "image_url": "",
      "real_experience": 2
    },
    {
      "name": "Dmitry Malafei",
      "about_me": "senior software engineer/team lead",
      "image_url": "",
      "real_experience": 7
    }
  ],
  "projects": [
    {
      "name": "CRM system",
      "description": "Application software for organizations, developed to automate customer interaction strategies, aiming to increase sales, optimize marketing, and improve customer service by storing information about customers and their relationship history, establishing and refining business processes, and subsequent analysis of results."
    },
    {
      "name": "Remote job search app",
      "description": "A remote job search app that allows users to find job vacancies in various industries that offer remote work options. The app scrapes websites with job postings and extracts relevant information such as job title, job description, company name, location, and application requirements."
    },
    {
      "name": "Cosmetics analog search service",
      "description": "Application that allows you to find a better, healthier, cheaper cosmetics by a large amount of parameters. Various data sources allow you to see cosmetics ingredients rating based on inci database, pubchem database, and a lot of different expert sources."
    },
    {
      "name": "Logistics service for workwear distributor",
      "description": "Application with lots of integrations for a workwear distributor. Allows to improve logistics of supplies, manage employees and their business, manage maps and build routes"
    },
    {
      "name": "VFX assets storage and integration",
      "description": "Service for integration of the ShotGrid cloud asset storage into the Houdini and Maya, and various optimizations for their rendering. Contains complex math and physics algorhytms, and improved resulting performance for almost 5 times."
    },
    {
      "name": "Restaurants interactive menu",
      "description": "Service for restaurants which contains interactive menu, overview of different restaurants in their network"
    },
    {
      "name": "Shoe suppliers services",
      "description": "Services for shoe supplier which allows to check current stocks in different warehouses, simplify different logistics, and also analyze business"
    },
    {
      "name": "Online casino and betting service",
      "description": "Services for an online casino, which include logic for customer interactions, betting services, etc."
    },
    {
      "name": "Educational platform",
      "description": "Educational platform, which allows teachers to interact with students, store tests, video-lessons, presentations, etc."
    },
    {
      "name": "Telecom CRM system",
      "description": "Analog of SAP CPQ service, but with much better performance and higher level of customization because of the manually written logic and order constructors."
    }
  ],
  "project_domains": [
    {
      "domain_name": "CRM",
      "project_name": "CRM system",
      "comments": "todo: add"
    },
    {
      "domain_name": "CMS",
      "project_name": "Remote job search app",
      "comments": "todo: add"
    },
    {
      "domain_name": "healthcare",
      "project_name": "Cosmetics analog search service",
      "comments": "todo: add"
    },
    {
      "domain_name": "telecom",
      "project_name": "Telecom CRM system",
      "comments": "todo: add"
    },
    {
      "domain_name": "education",
      "project_name": "Educational platform",
      "comments": "todo: add"
    },
    {
      "domain_name": "gambling",
      "project_name": "Online casino and betting service",
      "comments": "todo: add"
    },
    {
      "domain_name": "e-commerce",
      "project_name": "Shoe suppliers services",
      "comments": "todo: add"
    },
    {
      "domain_name": "e-commerce",
      "project_name": "Restaurants interactive menu",
      "comments": "todo: add"
    },
    {
      "domain_name": "VFX",
      "project_name": "VFX assets storage and integration",
      "comments": "todo: add"
    },
    {
      "domain_name": "logistics",
      "project_name": "Logistics service for workwear distributor",
      "comments": "todo: add"
    }
  ],
  "project_services": [
    {
      "project_name": "CRM system",
      "name": "users service",
      "description": "crm always must have a standalone service for user management. It has too much separate requests."
    },
    {
      "project_name": "CRM system",
      "name": "statistics service",
      "description": "It's useful for crm to have a standalone service for collecting all of the data."
    },
    {
      "project_name": "CRM system",
      "name": "integrations service",
      "description": "Usually crm has lots of integrations with different payment systems, suppliers, etc."
    },
    {
      "project_name": "CRM system",
      "name": "products service",
      "description": "If CRM offers something to user (always, actually), it must store all of the data in a standalone service"
    },
    {
      "project_name": "CRM system",
      "name": "orders service",
      "description": "It depends on products service. Allows to create separate order management"
    },
    {
      "project_name": "Educational platform",
      "name": "users service",
      "description": "Allows to manage users registering, auth, etc."
    },
    {
      "project_name": "Educational platform",
      "name": "teachers service",
      "description": "Allows to create and manage student boards, set marks, set events, etc."
    },
    {
      "project_name": "Educational platform",
      "name": "edu service",
      "description": "Stores and manages from of interactive video-lessons, tests completion, etc. "
    },
    {
      "project_name": "Educational platform",
      "name": "supporting service",
      "description": "stores all the media data, sends notifications, etc."
    },
    {
      "project_name": "Remote job search app",
      "name": "cms engine",
      "description": "hub for all of the services, sends notifications, etc."
    },
    {
      "project_name": "Remote job search app",
      "name": "admin service",
      "description": "allows users to easily administrate their contents"
    },
    {
      "project_name": "Remote job search app",
      "name": "content service",
      "description": "allows users to create content types and fill it"
    },
    {
      "project_name": "Remote job search app",
      "name": "template service",
      "description": "modifies templates and allows to dynamically insert contents on it"
    }
  ],
  "responsibilities": [
    {
      "name": "designing database schema",
      "priority": 5,
      "skill_name": "creating database schema",
      "experience": 5,
      "comments": "designing database schema using different tools like draw.io"
    },
    {
      "name": "database schema normalization",
      "priority": 5,
      "skill_name": "creating database schema",
      "experience": 3,
      "comments": "ensuring to have all normal forms a realized in database"
    },
    {
      "name": "database schema denormalization",
      "priority": 5,
      "skill_name": "creating database schema",
      "experience": 3,
      "comments": "denormalize database to improve performance"
    },
    {
      "name": "code refactoring",
      "priority": 3,
      "skill_name": "go basics",
      "experience": 2,
      "comments": "refactoring code to improve readability, scalability, performance, etc."
    },
    {
      "name": "configuring aws storage classes",
      "priority": 5,
      "skill_name": "AWS S3",
      "experience": 3,
      "comments": "s3 has different storage classes for different purposes"
    },
    {
      "name": "setting up Django application",
      "priority": 3,
      "skill_name": "python Django",
      "experience": 5,
      "comments": "default configuration, but usually has complex bottlenecks, that's why it's experience is this high"
    },
    {
      "name": "writing raw sql",
      "priority": 3,
      "skill_name": "python Django - ORM",
      "experience": 5,
      "comments": "sometimes it's easier to write raw sql queries to avoid ORM issues"
    },
    {
      "name": "resolving orm problems",
      "priority": 1,
      "skill_name": "python Django - ORM",
      "experience": 5,
      "comments": "select related, prefetch related"
    },
    {
      "name": "designing nosql storage",
      "priority": 1,
      "skill_name": "key-value nosql database",
      "experience": 5,
      "comments": "even if nosql database has no strict models, it's also needs to be designed"
    },
    {
      "name": "configuring AWS DynamoDB",
      "priority": 5,
      "skill_name": "AWS DynamoDB",
      "experience": 5,
      "comments": "read the AWS docs"
    },
    {
      "name": "configuring Azure cloud infrastructure",
      "priority": 5,
      "skill_name": "Azure",
      "experience": 5,
      "comments": "complex design of cloud part"
    },
    {
      "name": "configuring AWS cloud infrastructure",
      "priority": 5,
      "skill_name": "AWS",
      "experience": 5,
      "comments": "complex design of cloud part"
    },
    {
      "name": "configuring GCP cloud infrastructure",
      "priority": 5,
      "skill_name": "AWS",
      "experience": 5,
      "comments": "complex design of cloud part"
    },
    {
      "name": "configuring kafka consumer groups",
      "priority": 5,
      "skill_name": "kafka consumer groups",
      "experience": 5,
      "comments": "complex design of cloud part"
    },
    {
      "name": "creating kafka dead letter queue topic",
      "priority": 5,
      "skill_name": "kafka dlq",
      "experience": 5,
      "comments": "usually it requires a separate service. read this topic carefully"
    },
    {
      "name": "configuring grpc",
      "priority": 5,
      "skill_name": "grpc",
      "experience": 5,
      "comments": "configuring grpc exchange models"
    },
    {
      "name": "writing complex docker-compose.yml",
      "priority": 3,
      "skill_name": "docker-compose",
      "experience": 3,
      "comments": "adding different networks, volumes, health checks, dependencies, etc."
    },
    {
      "name": "writing docker-compose.yml",
      "priority": 5,
      "skill_name": "docker-compose",
      "experience": 1,
      "comments": "configuring docker-compose file"
    },
    {
      "name": "sql database development",
      "priority": 5,
      "skill_name": "sql database development",
      "experience": 1,
      "comments": "creating all the designed stuff"
    },
    {
      "name": "configuring RabbitMQ",
      "priority": 5,
      "skill_name": "rabbitMQ",
      "experience": 1,
      "comments": "setting up queues, routing keys, etc."
    },
    {
      "name": "configuring AWS ElasticSearch",
      "priority": 5,
      "skill_name": "Amazon ElasticSearch Service",
      "experience": 3,
      "comments": "setup"
    },
    {
      "name": "creating database views and materialized views",
      "priority": 5,
      "skill_name": "creating database views",
      "experience": 1,
      "comments": "views & materialized views"
    },
    {
      "name": "writing complex business logic",
      "priority": 5,
      "skill_name": "go complex business logic",
      "experience": 3,
      "comments": "cant comment, depends on project"
    },
    {
      "name": "configure AWS SNS",
      "priority": 1,
      "skill_name": "AWS SNS",
      "experience": 3,
      "comments": "read AWS docs"
    },
    {
      "name": "configure AWS SQS",
      "priority": 1,
      "skill_name": "AWS SQS",
      "experience": 3,
      "comments": "read AWS docs"
    },
    {
      "name": "configure AWS Cognito",
      "priority": 1,
      "skill_name": "AWS Cognito",
      "experience": 3,
      "comments": "read AWS docs"
    },
    {
      "name": "setup Flask application",
      "priority": 4,
      "skill_name": "python Flask",
      "experience": 3,
      "comments": "create project structure, setup config files, etc."
    },
    {
      "name": "database administration",
      "priority": 5,
      "skill_name": "database administration",
      "experience": 5,
      "comments": "creating users, roles, configuring permissions, etc."
    },
    {
      "name": "advanced work with go mutexes",
      "priority": 1,
      "skill_name": "go mutex",
      "experience": 3,
      "comments": "using different mutexes"
    },
    {
      "name": "setup Tornado application",
      "priority": 1,
      "skill_name": "python Tornado",
      "experience": 3,
      "comments": "create project structure, setup config files, etc."
    },
    {
      "name": "setup kafka consumer groups",
      "priority": 5,
      "skill_name": "kafka consumer groups",
      "experience": 3,
      "comments": "different consumer groups for work with different topics, consumers, etc."
    },
    {
      "name": "setup GCP infrastructure",
      "priority": 5,
      "skill_name": "GCP",
      "experience": 5,
      "comments": "setup all GCP services from projects"
    },
    {
      "name": "setup Azure DevOPS",
      "priority": 5,
      "skill_name": "Azure DevOPS",
      "experience": 5,
      "comments": "read the docs"
    },
    {
      "name": "setup Data Factory",
      "priority": 5,
      "skill_name": "Azure Data Factory",
      "experience": 5,
      "comments": "read the docs"
    },
    {
      "name": "setup GCP infrastructure",
      "priority": 5,
      "skill_name": "GCP",
      "experience": 5,
      "comments": "read the docs"
    },
    {
      "name": "setup IaaS in Azure DevOPS",
      "priority": 5,
      "skill_name": "Azure DevOPS",
      "experience": 5,
      "comments": "read the docs"
    },
    {
      "name": "setup kubernetes in AWS EKS",
      "priority": 5,
      "skill_name": "AWS EKS",
      "experience": 5,
      "comments": "read the docs"
    },
    {
      "name": "deploy and configure EC2 instances",
      "priority": 5,
      "skill_name": "AWS EC2",
      "experience": 5,
      "comments": "read the docs"
    },
    {
      "name": "setting up complex database connection patterns",
      "priority": 5,
      "skill_name": "go database management",
      "experience": 5,
      "comments": "read the docs"
    },
    {
      "name": "refactor python dependencies",
      "priority": 5,
      "skill_name": "python package management - Pip",
      "experience": 2,
      "comments": "read the docs"
    },
    {
      "name": "writing python scripts",
      "priority": 5,
      "skill_name": "python development",
      "experience": 1,
      "comments": "read the docs"
    },
    {
      "name": "setup Azure CDN",
      "priority": 5,
      "skill_name": "Azure CDN",
      "experience": 1,
      "comments": "read the docs"
    },
    {
      "name": "create DI-based project structure with fx",
      "priority": 3,
      "skill_name": "go uber/fx",
      "experience": 3,
      "comments": "read the docs"
    },
    {
      "name": "deploy docker containers in AWS ECS",
      "priority": 3,
      "skill_name": "AWS ECS",
      "experience": 3,
      "comments": "read the docs"
    },
    {
      "name": "Configure AWS CloudWatch",
      "priority": 3,
      "skill_name": "AWS CloudWatch",
      "experience": 5,
      "comments": "read the docs"
    },
    {
      "name": "scripting in go",
      "priority": 3,
      "skill_name": "go development",
      "experience": 3,
      "comments": "read the docs"
    },
    {
      "name": "configuring Django signals",
      "priority": 3,
      "skill_name": "python Django - signals",
      "experience": 3,
      "comments": "read the docs"
    },
    {
      "name": "designing project architecture",
      "priority": 5,
      "skill_name": "system design",
      "experience": 7,
      "comments": "read the docs"
    },
    {
      "name": "help in designing project architecture",
      "priority": 4,
      "skill_name": "system design",
      "experience": 5,
      "comments": "read the docs"
    },
    {
      "name": "Writing DRF application",
      "priority": 3,
      "skill_name": "python Django - DRF",
      "experience": 3,
      "comments": "read the docs"
    },
    {
      "name": "Writing complex DRF serializers",
      "priority": 3,
      "skill_name": "python Django - DRF - Serializers",
      "experience": 3,
      "comments": "read the docs"
    },
    {
      "name": "Creating Sanic application",
      "priority": 3,
      "skill_name": "python Sanic",
      "experience": 3,
      "comments": "read the docs"
    },
    {
      "name": "setting up redis database",
      "priority": 3,
      "skill_name": "redis",
      "experience": 2,
      "comments": "read the docs"
    },
    {
      "name": "setting up ms sql database",
      "priority": 3,
      "skill_name": "microsoft sql",
      "experience": 2,
      "comments": "read the docs"
    },
    {
      "name": "configure k8's clusters in GKE",
      "priority": 5,
      "skill_name": "google kubernetes engine",
      "experience": 4,
      "comments": "read the docs"
    },
    {
      "name": "configure Conda",
      "priority": 1,
      "skill_name": "python package management - Conda",
      "experience": 2,
      "comments": "read the docs"
    },
    {
      "name": "build application infrastructure",
      "priority": 4,
      "skill_name": "devOPS",
      "experience": 3,
      "comments": "read the docs"
    },
    {
      "name": "create gc bigtable instance (todo: do smth interesting here)",
      "priority": 5,
      "skill_name": "google cloud bigtable",
      "experience": 4,
      "comments": "read the docs"
    },
    {
      "name": "create gc container registry (todo: do smth interesting here)",
      "priority": 5,
      "skill_name": "google cloud container registry",
      "experience": 5,
      "comments": "read the docs"
    },
    {
      "name": "testing with nose",
      "priority": 5,
      "skill_name": "python testing - nose",
      "experience": 2,
      "comments": "read the docs"
    },
    {
      "name": "designing database",
      "priority": 5,
      "skill_name": "database design",
      "experience": 5,
      "comments": "read the docs"
    },
    {
      "name": "help in designing database",
      "priority": 5,
      "skill_name": "database design",
      "experience": 3,
      "comments": "read the docs"
    },
    {
      "name": "database stress testing",
      "priority": 5,
      "skill_name": "database stress testing",
      "experience": 4,
      "comments": "read the docs"
    },
    {
      "name": "setup and configure NoSQL database",
      "priority": 4,
      "skill_name": "nosql database development",
      "experience": 3,
      "comments": "read the docs"
    },
    {
      "name": "configure k8's clusters",
      "priority": 5,
      "skill_name": "kubernetes",
      "experience": 5,
      "comments": "read the docs"
    },
    {
      "name": "creating unit tests with pytest",
      "priority": 5,
      "skill_name": "python testing - pytest",
      "experience": 3,
      "comments": "read the docs"
    },
    {
      "name": "writing http router with chi",
      "priority": 3,
      "skill_name": "go chi",
      "experience": 1,
      "comments": "read the docs"
    },
    {
      "name": "writing complex logic with wait groups",
      "priority": 1,
      "skill_name": "go wait groups",
      "experience": 3,
      "comments": "read the docs"
    },
    {
      "name": "created http routing with mux",
      "priority": 3,
      "skill_name": "go mux",
      "experience": 1,
      "comments": "read the docs"
    },
    {
      "name": "created IAM roles",
      "priority": 3,
      "skill_name": "google cloud IAM",
      "experience": 4,
      "comments": "read the docs"
    },
    {
      "name": "setup and configure AWS Aurora",
      "priority": 3,
      "skill_name": "AWS Aurora",
      "experience": 4,
      "comments": "read the docs"
    },
    {
      "name": "creating and managing ip address pools",
      "priority": 5,
      "skill_name": "network configuration",
      "experience": 5,
      "comments": "read the docs"
    },
    {
      "name": "configuring GCP VPC",
      "priority": 5,
      "skill_name": "google VPC",
      "experience": 5,
      "comments": "read the docs"
    },
    {
      "name": "setting up mongodb",
      "priority": 5,
      "skill_name": "mongodb",
      "experience": 5,
      "comments": "read the docs"
    },
    {
      "name": "configuring AWS CloudFront",
      "priority": 5,
      "skill_name": "AWS CloudFront",
      "experience": 5,
      "comments": "read the docs"
    },
    {
      "name": "ensuring service architecture security",
      "priority": 5,
      "skill_name": "secOPS",
      "experience": 5,
      "comments": "read the docs"
    },
    {
      "name": "setting up kafka",
      "priority": 5,
      "skill_name": "kafka",
      "experience": 3,
      "comments": "read the docs"
    },
    {
      "name": "complex code optimization",
      "priority": 5,
      "skill_name": "go optimization",
      "experience": 3,
      "comments": "read the docs"
    },
    {
      "name": "building and optimizing database indexes",
      "priority": 5,
      "skill_name": "creating database indexes",
      "experience": 3,
      "comments": "explain/explain analyze"
    },
    {
      "name": "writing services in go",
      "priority": 5,
      "skill_name": "go web development",
      "experience": 1,
      "comments": "frameworks could be mentioned here"
    },
    {
      "name": "building & optimizing gorm queries",
      "priority": 5,
      "skill_name": "gorm",
      "experience": 1,
      "comments": "also should be mentioned why not raw sql"
    },
    {
      "name": "building & optimizing gorm queries",
      "priority": 5,
      "skill_name": "gorm",
      "experience": 1,
      "comments": "also should be mentioned why not raw sql"
    },
    {
      "name": "building application architecture in cloud",
      "priority": 1,
      "skill_name": "cloud",
      "experience": 5,
      "comments": "too wide resp, only for manual insert"
    },
    {
      "name": "setup oracle sql pdb",
      "priority": 5,
      "skill_name": "oracle",
      "experience": 5,
      "comments": "pdb - pluggable database"
    },
    {
      "name": "setup database instances in AWS RDS",
      "priority": 5,
      "skill_name": "AWS RDS",
      "experience": 3,
      "comments": "database should be mentioned also"
    },
    {
      "name": "created complex dockerfiles",
      "priority": 5,
      "skill_name": "docker",
      "experience": 3,
      "comments": "for example with custom build/deploy images"
    },
    {
      "name": "setup secure network in AWS VPC",
      "priority": 5,
      "skill_name": "AWS VPC",
      "experience": 3,
      "comments": "use address pools, also could mention allow-any, deny-any, and other policies"
    },
    {
      "name": "create custom go routes",
      "priority": 2,
      "skill_name": "go routing",
      "experience": 3,
      "comments": "could mention about middlewares, parameter handling, etc."
    },
    {
      "name": "writing raw sql queries",
      "priority": 3,
      "skill_name": "go sql package",
      "experience": 3,
      "comments": "-"
    },
    {
      "name": "created IAM roles",
      "priority": 3,
      "skill_name": "AWS IAM",
      "experience": 5,
      "comments": "usually it's 5-10 roles for different developers, cloud admin, etc."
    },
    {
      "name": "deployed application on GCP app engine",
      "priority": 2,
      "skill_name": "google app engine",
      "experience": 3,
      "comments": "-"
    },
    {
      "name": "write tests with testify/assert",
      "priority": 1,
      "skill_name": "go testify/assert",
      "experience": 1,
      "comments": "-"
    },
    {
      "name": "implemented API response caching with redis",
      "priority": 4,
      "skill_name": "caching with redis",
      "experience": 3,
      "comments": "a separate service on a high level is used for this purposes. Usually it's something like API Gateway"
    },
    {
      "name": "setup mysql",
      "priority": 4,
      "skill_name": "mysql",
      "experience": 3,
      "comments": "users, roles, databases could be mentioned here"
    },
    {
      "name": "optimized fastAPI application",
      "priority": 5,
      "skill_name": "python FastAPI",
      "experience": 3,
      "comments": "used DI instead of regular parameter passing to avoid re-initialization of repositories, for example"
    },
    {
      "name": "implemented advanced concurrency patterns to improve performance",
      "priority": 5,
      "skill_name": "go concurrency",
      "experience": 5,
      "comments": "Multiplexing, Channels as a handle on a service, Restoring sequencing, https://go.dev/talks/2012/concurrency.slide#1"
    }
  ],
  "responsibility_conflicts": [
    {
      "responsibility_1_name": "database schema normalization",
      "responsibility_2_name": "database schema denormalization",
      "comment": "it's not logical to have normalization and denormalization in one cv, but it can be in different services",
      "priority": 2
    }
  ],
  "responsibility_synonyms": [
    {
      "responsibility_name": "vfx tools optimization",
      "name": "complex optimization"
    },
    {
      "responsibility_name": "optimization 2",
      "name": "complex optimization"
    },
    {
      "responsibility_name": "database schema normalization",
      "name": "database normalization"
    },
    {
      "responsibility_name": "database schema denormalization",
      "name": "database denormalization"
    }
  ],
  "skills": [
    {
      "name": "python development",
      "description": "working with python",
      "parent_name": null
    },
    {
      "name": "system design",
      "description": "system design",
      "parent_name": null
    },
    {
      "name": "network configuration",
      "description": "system design",
      "parent_name": "system design"
    },
    {
      "name": "devOPS",
      "description": "system design",
      "parent_name": "system design"
    },
    {
      "name": "cloud",
      "description": "system design",
      "parent_name": "devOPS"
    },
    {
      "name": "AWS",
      "description": "amazon web services",
      "parent_name": "cloud"
    },
    {
      "name": "AWS S3",
      "description": "simple storage service",
      "parent_name": "AWS"
    },
    {
      "name": "AWS Lambda functions",
      "description": "serverless computing",
      "parent_name": "AWS"
    },
    {
      "name": "AWS EC2",
      "description": "elastic compute cloud",
      "parent_name": "AWS"
    },
    {
      "name": "AWS ECS",
      "description": "elastic container service",
      "parent_name": "AWS"
    },
    {
      "name": "AWS EKS",
      "description": "elastic kubernetes service",
      "parent_name": "AWS"
    },
    {
      "name": "AWS SQS",
      "description": "simple queue service",
      "parent_name": "AWS"
    },
    {
      "name": "AWS VPC",
      "description": "virtual private cloud",
      "parent_name": "AWS"
    },
    {
      "name": "Amazon ElasticSearch Service",
      "description": "elasticsearch",
      "parent_name": "AWS"
    },
    {
      "name": "AWS CloudFormation",
      "description": "enables users to model and manage infrastructure resources in an automated and secure manner",
      "parent_name": "AWS"
    },
    {
      "name": "AWS RDS",
      "description": "relational database service",
      "parent_name": "AWS"
    },
    {
      "name": "AWS IAM",
      "description": "identity & access management",
      "parent_name": "AWS"
    },
    {
      "name": "AWS EFS",
      "description": "elastic file system",
      "parent_name": "AWS"
    },
    {
      "name": "AWS CloudFront",
      "description": "service for content delivery networks",
      "parent_name": "AWS"
    },
    {
      "name": "AWS SNS",
      "description": "simple notification service",
      "parent_name": "AWS"
    },
    {
      "name": "AWS DynamoDB",
      "description": "serverless, document database key-value NoSQL database",
      "parent_name": "AWS"
    },
    {
      "name": "AWS Cognito",
      "description": "identity management service used for user identity and data synchronization",
      "parent_name": "AWS"
    },
    {
      "name": "AWS Aurora",
      "description": "RDBMS (Relational Database Management System) which is built with mysql and postgresql for the cloud",
      "parent_name": "AWS"
    },
    {
      "name": "AWS API Gateway",
      "description": "API Gateway",
      "parent_name": "AWS"
    },
    {
      "name": "AWS Cloudwatch",
      "description": "detects uncommon changes in the environment, set an alert, troubleshoots issues, and take automated actions.",
      "parent_name": "AWS"
    },
    {
      "name": "AWS S3 Glacier",
      "description": "It is a long-term, secure, durable storage class for data archiving at the lowest cost and milliseconds of access",
      "parent_name": "AWS"
    },
    {
      "name": "Azure",
      "description": "microsoft azure web services",
      "parent_name": "cloud"
    },
    {
      "name": "Azure Active Directory",
      "description": "single sign-on and multi-factor authentication as an enterprise identity service to protect them",
      "parent_name": "Azure"
    },
    {
      "name": "Azure CDN",
      "description": "content delivery network",
      "parent_name": "Azure"
    },
    {
      "name": "Azure Data Factory",
      "description": "data-driven workflow in cloud computing",
      "parent_name": "Azure"
    },
    {
      "name": "Azure SQL",
      "description": "sql lol",
      "parent_name": "Azure"
    },
    {
      "name": "Azure Functions",
      "description": "serverless computing",
      "parent_name": "Azure"
    },
    {
      "name": "Azure CosmosDB",
      "description": "noSQL database",
      "parent_name": "Azure"
    },
    {
      "name": "Azure DevOPS",
      "description": "software as a service (SaaS) platform",
      "parent_name": "Azure"
    },
    {
      "name": "Azure Backup",
      "description": "allows simple data protection tools",
      "parent_name": "Azure"
    },
    {
      "name": "Azure Virtual Machine",
      "description": "creates VM's",
      "parent_name": "Azure"
    },
    {
      "name": "Azure Service Bus",
      "description": "message broker",
      "parent_name": "Azure"
    },
    {
      "name": "GCP",
      "description": "google cloud platform",
      "parent_name": "cloud"
    },
    {
      "name": "google VPC",
      "description": "google virtual private cloud",
      "parent_name": "GCP"
    },
    {
      "name": "google app engine",
      "description": "lets you create and host applications",
      "parent_name": "GCP"
    },
    {
      "name": "google kubernetes engine",
      "description": "gcp k8's",
      "parent_name": "GCP"
    },
    {
      "name": "google cloud container registry",
      "description": "service designed for storing private container images",
      "parent_name": "GCP"
    },
    {
      "name": "google cloud functions",
      "description": "serverless computing",
      "parent_name": "GCP"
    },
    {
      "name": "google cloud load balancing",
      "description": "distributes internet traffic",
      "parent_name": "GCP"
    },
    {
      "name": "google cloud delivery network",
      "description": "GCP CDN",
      "parent_name": "GCP"
    },
    {
      "name": "google cloud storage",
      "description": "storing and accessing data",
      "parent_name": "GCP"
    },
    {
      "name": "google cloud sql",
      "description": "sql",
      "parent_name": "GCP"
    },
    {
      "name": "google cloud bigtable",
      "description": "managing large-scale structured data",
      "parent_name": "GCP"
    },
    {
      "name": "google cloud datastore",
      "description": "nosql",
      "parent_name": "GCP"
    },
    {
      "name": "google cloud bigquery",
      "description": "fully managed data warehouse that enables analytics on massive datasets",
      "parent_name": "GCP"
    },
    {
      "name": "google cloud IAM",
      "description": "identity management",
      "parent_name": "GCP"
    },
    {
      "name": "message brokers",
      "description": "system design",
      "parent_name": "devOPS"
    },
    {
      "name": "kafka",
      "description": "system design",
      "parent_name": "message brokers"
    },
    {
      "name": "kafka dlq",
      "description": "kafka does not have built-in dead letter queue",
      "parent_name": "kafka"
    },
    {
      "name": "kafka consumer groups",
      "description": "system design",
      "parent_name": "kafka"
    },
    {
      "name": "creating kafka topics",
      "description": "system design",
      "parent_name": "kafka"
    },
    {
      "name": "rabbitMQ",
      "description": "system design",
      "parent_name": "message brokers"
    },
    {
      "name": "docker",
      "description": "system design",
      "parent_name": "devOPS"
    },
    {
      "name": "docker-compose",
      "description": "system design",
      "parent_name": "docker"
    },
    {
      "name": "kubernetes",
      "description": "system design",
      "parent_name": "docker"
    },
    {
      "name": "secOPS",
      "description": "system design",
      "parent_name": "system design"
    },
    {
      "name": "go development",
      "description": "go development",
      "parent_name": null
    },
    {
      "name": "go web development",
      "description": "go development",
      "parent_name": "go development"
    },
    {
      "name": "go basics",
      "description": "go development",
      "parent_name": "go development"
    },
    {
      "name": "go complex business logic",
      "description": "go development",
      "parent_name": "go development"
    },
    {
      "name": "go optimization",
      "description": "go development",
      "parent_name": "go development"
    },
    {
      "name": "go uber/fx",
      "description": "large go DI package",
      "parent_name": "go basics"
    },
    {
      "name": "go concurrency",
      "description": "go development",
      "parent_name": "go basics"
    },
    {
      "name": "goroutines",
      "description": "go development",
      "parent_name": "go concurrency"
    },
    {
      "name": "go channels",
      "description": "go development",
      "parent_name": "go concurrency"
    },
    {
      "name": "go mutex",
      "description": "go development",
      "parent_name": "go concurrency"
    },
    {
      "name": "go wait groups",
      "description": "go development",
      "parent_name": "go concurrency"
    },
    {
      "name": "go testing",
      "description": "go development",
      "parent_name": "go basics"
    },
    {
      "name": "go testing package",
      "description": "go development",
      "parent_name": "go testing"
    },
    {
      "name": "go testify/assert",
      "description": "go development",
      "parent_name": "go testing"
    },
    {
      "name": "go test containers",
      "description": "go development",
      "parent_name": "go testing"
    },
    {
      "name": "go routing",
      "description": "go development",
      "parent_name": "go web development"
    },
    {
      "name": "go database management",
      "description": "go development",
      "parent_name": "go web development"
    },
    {
      "name": "grpc",
      "description": "go development",
      "parent_name": "go web development"
    },
    {
      "name": "gorm",
      "description": "go development",
      "parent_name": "go database management"
    },
    {
      "name": "go sql package",
      "description": "go development",
      "parent_name": "go database management"
    },
    {
      "name": "custom routing",
      "description": "go development",
      "parent_name": "go routing"
    },
    {
      "name": "httprouter",
      "description": "go development",
      "parent_name": "go routing"
    },
    {
      "name": "go mux",
      "description": "go development",
      "parent_name": "go routing"
    },
    {
      "name": "go chi",
      "description": "go development",
      "parent_name": "go routing"
    },
    {
      "name": "ruby development",
      "description": "ruby development",
      "parent_name": null
    },
    {
      "name": "databases",
      "description": "databases development",
      "parent_name": null
    },
    {
      "name": "database development",
      "description": "databases development",
      "parent_name": "database development"
    },
    {
      "name": "sql database development",
      "description": "databases development",
      "parent_name": "database development"
    },
    {
      "name": "postgresql",
      "description": "databases development",
      "parent_name": "sql database development"
    },
    {
      "name": "microsoft sql",
      "description": "databases development",
      "parent_name": "sql database development"
    },
    {
      "name": "oracle sql",
      "description": "databases development",
      "parent_name": "sql database development"
    },
    {
      "name": "mysql",
      "description": "databases development",
      "parent_name": "sql database development"
    },
    {
      "name": "nosql database development",
      "description": "databases development",
      "parent_name": "database development"
    },
    {
      "name": "key-value nosql database",
      "description": "databases development",
      "parent_name": "nosql database development"
    },
    {
      "name": "document-oriented nosql database",
      "description": "databases development",
      "parent_name": "nosql database development"
    },
    {
      "name": "redis",
      "description": "databases development",
      "parent_name": "key-value nosql database"
    },
    {
      "name": "caching with redis",
      "description": "databases development",
      "parent_name": "redis"
    },
    {
      "name": "creating message broker with redis",
      "description": "databases development",
      "parent_name": "redis"
    },
    {
      "name": "mongodb",
      "description": "databases development",
      "parent_name": "document-oriented nosql database"
    },
    {
      "name": "database administration",
      "description": "databases development",
      "parent_name": "databases"
    },
    {
      "name": "database optimization",
      "description": "databases development",
      "parent_name": "database administration"
    },
    {
      "name": "database finding bottlenecks",
      "description": "databases development",
      "parent_name": "database optimization"
    },
    {
      "name": "database query optimization",
      "description": "databases development",
      "parent_name": "database optimization"
    },
    {
      "name": "database stress testing",
      "description": "databases development",
      "parent_name": "database optimization"
    },
    {
      "name": "database query optimization",
      "description": "databases development",
      "parent_name": "database optimization"
    },
    {
      "name": "database design",
      "description": "databases development",
      "parent_name": "databases"
    },
    {
      "name": "database refactoring",
      "description": "databases development",
      "parent_name": "databases"
    },
    {
      "name": "creating database indexes",
      "description": "databases development",
      "parent_name": "database design"
    },
    {
      "name": "creating database views",
      "description": "databases development",
      "parent_name": "database design"
    },
    {
      "name": "creating database triggers",
      "description": "databases development",
      "parent_name": "database design"
    },
    {
      "name": "creating database functions and procedures",
      "description": "databases development",
      "parent_name": "database design"
    },
    {
      "name": "creating database schema",
      "description": "databases development",
      "parent_name": "database design"
    },
    {
      "name": "python package management",
      "description": "working with python package managers",
      "parent_name": "python development"
    },
    {
      "name": "python package management - PyPI",
      "description": "working with python package managers",
      "parent_name": "python package management"
    },
    {
      "name": "python package management - Pip",
      "description": "working with python package managers",
      "parent_name": "python package management"
    },
    {
      "name": "python package management - Conda",
      "description": "working with python package managers",
      "parent_name": "python package management"
    },
    {
      "name": "python package management - Poetry",
      "description": "working with python package managers",
      "parent_name": "python package management"
    },
    {
      "name": "python testing",
      "description": "testing in python",
      "parent_name": "python development"
    },
    {
      "name": "python testing - doctest",
      "description": "testing in python",
      "parent_name": "python testing"
    },
    {
      "name": "python testing - nose",
      "description": "testing in python",
      "parent_name": "python testing"
    },
    {
      "name": "python testing - pytest",
      "description": "testing in python",
      "parent_name": "python testing"
    },
    {
      "name": "python testing - unittest",
      "description": "testing in python",
      "parent_name": "python testing"
    },
    {
      "name": "python web development",
      "description": "web development in python",
      "parent_name": "python development"
    },
    {
      "name": "python Django",
      "description": "python web development with django",
      "parent_name": "python web development"
    },
    {
      "name": "python Django - signals",
      "description": "Using signals in django",
      "parent_name": "python Django"
    },
    {
      "name": "python Django - setup",
      "description": "setting up django application, with configuring apps, config files, connections, etc.",
      "parent_name": "python Django"
    },
    {
      "name": "python Django - admin",
      "description": "Using complex admin panels in django",
      "parent_name": "python Django"
    },
    {
      "name": "python Django - ORM",
      "description": "Using Django ORM in django",
      "parent_name": "python Django"
    },
    {
      "name": "python Django - templates",
      "description": "Using Django templates in django",
      "parent_name": "python Django"
    },
    {
      "name": "python Django - DRF",
      "description": "Using Django Rest Framework in django",
      "parent_name": "python Django"
    },
    {
      "name": "python Django - DRF - Serializers",
      "description": "Using Django Rest Framework serializers",
      "parent_name": "python Django - DRF"
    },
    {
      "name": "python Django - DRF - Viewsets",
      "description": "Using Django Rest Framework serializers",
      "parent_name": "python Django - DRF"
    },
    {
      "name": "python FastAPI",
      "description": "python web development with FastAPI",
      "parent_name": "python web development"
    },
    {
      "name": "python Flask",
      "description": "python web development with Flask",
      "parent_name": "python web development"
    },
    {
      "name": "python Tornado",
      "description": "python web development with Tornado",
      "parent_name": "python web development"
    },
    {
      "name": "python Sanic",
      "description": "python web development with Sanic",
      "parent_name": "python web development"
    }
  ],
  "skill_domains": [
    {
      "domain_name": "VFX",
      "skill_name": "VFX",
      "comments": "",
      "priority": 10
    }
  ],
  "skill_conflicts": [
    {
      "skill_1_name": "python Flask",
      "skill_2_name": "python FastAPI",
      "comment": "these applications do the same things. It's way not too useful to use them both in the same project",
      "priority": 5
    }
  ],
  "vacancies": [
    {
      "name": "Senior python software engineer at Innowise group",
      "company_name": "Innowise Group",
      "link": "https://innowise.com/careers/",
      "description": "Do everything you want, but NOT python development. Good luck!",
      "published_at": "2024-12-07T13:00:00Z",
      "experience": 0
    }
  ],
  "vacancy_domains": [
    {
      "vacancy_name": "Senior python software engineer at Innowise group",
      "domain_name": "backend development",
      "priority": 10
    }
  ],
  "vacancy_skills": [
    {
      "vacancy_name": "Senior python software engineer at Innowise group",
      "skill_name": "blender",
      "priority": 3
    }
  ]
}